<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>线段树 on 小钟的博客</title>
    <link>https://lilacrainode.github.io/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/</link>
    <description>Recent content in 线段树 on 小钟的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 23 Jan 2020 14:40:29 +0800</lastBuildDate>
    
	<atom:link href="https://lilacrainode.github.io/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Acwing1270数列区间最大值线段树解法</title>
      <link>https://lilacrainode.github.io/post/Acwing1270%E6%95%B0%E5%88%97%E5%8C%BA%E9%97%B4%E6%9C%80%E5%A4%A7%E5%80%BC-%E7%BA%BF%E6%AE%B5%E6%A0%91%E8%A7%A3%E6%B3%95/</link>
      <pubDate>Thu, 23 Jan 2020 14:40:29 +0800</pubDate>
      
      <guid>https://lilacrainode.github.io/post/Acwing1270%E6%95%B0%E5%88%97%E5%8C%BA%E9%97%B4%E6%9C%80%E5%A4%A7%E5%80%BC-%E7%BA%BF%E6%AE%B5%E6%A0%91%E8%A7%A3%E6%B3%95/</guid>
      <description>原题链接 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 #include &amp;lt;iostream&amp;gt;#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;string.h&amp;gt;#include &amp;lt;algorithm&amp;gt;#include &amp;lt;limits.h&amp;gt; using namespace std; const int N = 100010; int n, m, w[N]; struct Node { int l, r; int maxv; } tr[N * 4]; void pushup(int u) { tr[u].maxv = max(tr[u &amp;lt;&amp;lt; 1].maxv, tr[u &amp;lt;&amp;lt; 1 | 1].maxv); } void build(int u, int l, int r) { if (l == r) { tr[u].l = l; tr[u].r = r; tr[u].maxv = w[r]; return;</description>
    </item>
    
    <item>
      <title>树状数组和线段树模板题</title>
      <link>https://lilacrainode.github.io/post/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E5%92%8C%E7%BA%BF%E6%AE%B5%E6%A0%91%E6%A8%A1%E6%9D%BF%E9%A2%98/</link>
      <pubDate>Thu, 23 Jan 2020 12:00:19 +0800</pubDate>
      
      <guid>https://lilacrainode.github.io/post/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E5%92%8C%E7%BA%BF%E6%AE%B5%E6%A0%91%E6%A8%A1%E6%9D%BF%E9%A2%98/</guid>
      <description>树状数组会比线段树写起来简单，树状数组能解决的问题线段树一定能解决 线段树要比树状数组慢1倍左右，树状数组1秒能解决的问题线段树可能需要2秒 模板题-动态求连续区间和 树状数组 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 #include &amp;lt;cstdio&amp;gt;#include &amp;lt;cstring&amp;gt;#include &amp;lt;iostream&amp;gt;#include &amp;lt;algorithm&amp;gt;</description>
    </item>
    
  </channel>
</rss>